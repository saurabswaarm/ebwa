{"version":3,"sources":["components/AppWrapper.tsx","redux/actionTypes.ts","config.ts","redux/actions.ts","redux/selectors.ts","components/AppBar/AppBar.tsx","components/Authentication/CreateAccount.tsx","components/Authentication/AccountCreated.tsx","components/Authentication/NoInvite.tsx","components/Authentication/LoginModule.tsx","components/Authentication/AccountAlreadyExists.tsx","components/Authentication/Login.tsx","components/Authentication/InvalidPassword.tsx","components/Authentication/ForgotPassword.tsx","components/Authentication/ResetForgotPassword.tsx","components/Authentication/ChangePassword.tsx","components/Authentication/PasswordChanged.tsx","components/Authentication/Authentication.tsx","components/Welcome.tsx","components/ErrorScreen.tsx","components/NoticeBoard/CurrentUser/CurrentUser.tsx","components/NoticeBoard/MainFeed/Post.tsx","components/NoticeBoard/MainFeed/MainFeed.tsx","components/NoticeBoard/NoticeBoard.tsx","redux/reducers/authReducer.ts","redux/reducers/errorReducer.ts","redux/reducers/noticeBoardReducer.ts","redux/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NoticeBoardWrapper","props","className","children","SET_USER","REMOVE_USER","SET_USER_ERR","SET_NOTICEBOARD","REMOVE_NOTICEBOARD","SET_NOTICEBOARD_ERR","config","host","setUser","userObject","type","payload","setUserErr","authError","console","log","code","status","message","removeUser","getNoticeBoard","dispatch","getState","a","fetch","method","headers","credentials","response","json","responseJson","posts","getUserFromState","store","user","getPostsFromState","noticeBoard","AppBar","useDispatch","useSelector","history","useHistory","loggedInOptions","aria-current","onClick","e","document","getElementById","click","push","to","loggedOutOptions","name","id","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","CreateAccount","useState","email","setEmail","preventDefault","body","JSON","stringify","responseJ","placeholder","value","onChange","currentTarget","AccountCreated","NoInvite","LoginModule","loginDisabled","setLoginDisabled","password","setCredentials","handleInput","target","useEffect","p","includes","length","validateCredentials","required","disabled","credentialsObject","InvalidPassword","Login","ForgotPassword","ResetForgotPassword","ChangePassword","htmlFor","PasswordChanged","Authentication","path","AccountAlreadyExists","Welcome","checkedSession","setSessionCheck","style","backgroundColor","border","borderRadius","boxShadow","margin","width","height","src","ErrorScreen","location","useLocation","error","qs","parse","search","ignoreQueryPrefix","CurrentUser","cid","designation","Post","post","dateObj","Date","date","author","toLocaleDateString","title","subject","MainFeed","postsToRender","NoticeBoard","authReducer","state","action","initialState","errorReducer","noticeBoardReducer","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","rootReducer","combineReducers","createStore","App","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7fb176e.chunk.js","sourcesContent":["function NoticeBoardWrapper(props) {\n    return (\n        <div className=\"container-fluid\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-8 col-sm-10 p-0 bg-white\">\n              {props.children}\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default NoticeBoardWrapper;","export const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const RESUME_SESIION = 'RESUME_SESSION';\n\nexport const SET_USER = 'SET_USER'\nexport const REMOVE_USER = 'REMOVE_USER';\n\nexport const SET_USER_ERR = 'SET_USER_ERR';\n\nexport const SET_NOTICEBOARD ='SET_NOTICEBOARD';\nexport const REMOVE_NOTICEBOARD = 'REMOVE_NOTICEBOARD';\nexport const GET_NOTICEBOARD = 'GET_NOTICEBOARD';\nexport const SET_NOTICEBOARD_ERR = 'SET_NOTICEBOARD_ERR';","\nlet dev = process.env.NODE_ENV == 'development' || process.env.REACT_APP_BUILD_LOCAL_SERVER == 'development';\n\nexport let config = {\n        host:  dev ? 'http://localhost:3006' : 'http://ebwa.in',\n}\n","import { SET_USER_ERR, SET_USER, REMOVE_USER, SET_NOTICEBOARD, REMOVE_NOTICEBOARD, SET_NOTICEBOARD_ERR} from './actionTypes';\nimport { UserCredentials, IUserF, AuthError, AuthResponse } from '../../types/authTypes';\nimport { Store, Action, Dispatch, AnyAction } from 'redux';\nimport { config } from '../config';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { AppState } from '../../types/stateTypes';\n\n\n\nexport const logInUser = function (credentialsObject: UserCredentials) {\n    return async function (dispatch: Store['dispatch'], getState: Store['getState']) {\n        try {\n            let response: Response = await fetch(\n                `${config.host}/api/auth/login`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    credentials: \"include\",\n                    body: JSON.stringify(credentialsObject),\n                }\n            );\n\n            let responseJson = await response.json();\n\n            if (responseJson.code == 2) {\n                dispatch(setUser(responseJson.payload.user))\n            } else {\n                dispatch(setUserErr(responseJson.payload))\n            }\n        } catch (err) {\n            console.log(err);\n            dispatch(removeUser())\n        }\n    }\n}\n\nexport const logOutUser = function () {\n    return async function (dispatch: Dispatch<AnyAction>, getState: Store['getState']) {\n        console.log('Logout action fired');\n        let response: Response = await fetch(\n            `${config.host}/api/auth/logout`,\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                credentials: 'include'\n            }\n        )\n\n        let responseJson = await response.json();\n\n        if (responseJson.code == 3) {\n            dispatch(removeUser())\n        } else {\n            dispatch(setUserErr(responseJson))\n            dispatch(removeUser());\n        }\n\n\n    }\n}\n\nexport const resumeSession = function() {\n    console.log('resume session ran');\n    return async function (dispatch: ThunkDispatch<AppState,void ,Action>, getState: Store['getState']) {\n        try {\n            let response: Response = await fetch(\n                `${config.host}/api/auth/resumesession`,\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    credentials: 'include'\n                }\n            )\n\n            let responseJson = await response.json();\n\n            if (responseJson.code == 2) {\n                dispatch(setUser(responseJson.payload.user));\n                dispatch(getNoticeBoard());\n            } else {\n                console.log(responseJson)\n                dispatch(setUserErr(responseJson))\n                dispatch(removeUser());\n            }\n        } catch (err) {\n            console.log(err);\n            dispatch(removeUser())\n        }\n    }\n}\n\nexport const setUser = function (userObject: IUserF) {\n    return {\n        type: SET_USER,\n        payload: userObject\n    }\n}\n\nexport const setUserErr: (arg0: AuthError) => Action = function (authError: AuthError) {\n    console.log(authError);\n    return {\n        type: SET_USER_ERR,\n        payload: {\n            code: authError.code,\n            status: authError.payload.status,\n            message: authError.payload.message\n        }\n    }\n}\n\nexport const removeUser = function () {\n    return {\n        type: REMOVE_USER,\n        payload: null\n    }\n}\n\nexport const setNoticeBoard = function(posts:any[]){\n    return {\n        type:SET_NOTICEBOARD,\n        payload:posts\n    }\n}\n\nexport const removeNoticeBoard = function() {\n    return {\n        type:REMOVE_NOTICEBOARD,\n        payload:null\n    }\n}\n\nexport const setNoticeBoardError = function(err:any) {\n    return {\n        type:SET_NOTICEBOARD_ERR,\n        payload:err\n    }\n}\n\nexport const getNoticeBoard = function(){\n    return async function (dispatch: Store['dispatch'], getState: Store['getState']) {\n        try {\n            let response: Response = await fetch(\n                `${config.host}/api/posts`,\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    credentials: \"include\"\n                }\n            );\n\n            let responseJson = await response.json();\n\n            if (responseJson.code == 4) {\n                dispatch(setNoticeBoard(responseJson.payload.posts))\n            } else {\n                dispatch(setNoticeBoardError(responseJson));\n            }\n        } catch (err) {\n            console.log(err);\n            dispatch(removeUser())\n        }\n    } \n}\n\n\n\n","import { AppState } from \"../../types/stateTypes\";\n\nexport const getUserFromState = (store:AppState) => {\n    return store.user;\n}\n\nexport const getPostsFromState = (store:AppState) => {\n    return store.noticeBoard;\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { logOutUser } from \"../../redux/actions\";\nimport { getUserFromState } from \"../../redux/selectors\";\n\nfunction AppBar() {\n  const dispatch = useDispatch();\n  const user = useSelector(getUserFromState);\n  let history = useHistory();\n\n  function handleLogOut(e: React.SyntheticEvent) {\n    document.getElementById(\"nav-toggle-toggle\")?.click();\n    dispatch(logOutUser());\n    history.push(\"/f/auth/login\");\n    console.log(history);\n  }\n\n\n  let loggedInOptions = (\n    <>\n      <li className=\"nav-item\">\n        <span\n          className=\"nav-link active\"\n          aria-current=\"page\"\n          onClick={handleLogOut}\n        >\n          Log Out\n        </span>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/f/auth/changepassword\">\n          Change Password\n        </Link>\n      </li>\n    </>\n  );\n\n  let loggedOutOptions =(\n    <>\n     <li className=\"nav-item\" onClick={()=>(document.getElementById(\"nav-toggle-toggle\")!.click())}>\n        <Link className=\"nav-link\" to=\"/f/auth/login\" >\n          Log In\n        </Link>\n      </li> \n    </>\n  )\n\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\" >\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          EBWA\n        </Link>\n        <div className=\"text-light\">{user.name}</div>\n        <button\n          id=\"nav-toggle-toggle\"\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            {user ? loggedInOptions : loggedOutOptions }\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default AppBar;\n","import React, {useState} from \"react\";\nimport { Link, useHistory} from \"react-router-dom\";\n\nfunction CreateAccount() {\n\n  let [email, setEmail] = useState('');\n  let history = useHistory();\n\n\n\n  async function handleClaimAccount(e:React.SyntheticEvent) {\n    e.preventDefault();\n    console.log(email + ' is being claimed');\n\n    let response:Response = await fetch(\"http://localhost:3006/api/auth/createaccount\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body:JSON.stringify({\n        \"email\": email,\n      })\n    });\n\n    let responseJ = await response.json();\n\n    if(responseJ.code == 1){\n      history.push('/f/auth/accountcreated');\n    } else if( responseJ.code == 456){\n      history.push('/f/auth/login');\n    } else if( responseJ.code == 455) {\n      history.push('/f/auth/noinvite')\n    }else {\n      history.push('/f/error');\n    }\n\n\n  }\n\n  function handleInput(e:React.BaseSyntheticEvent){\n    setEmail(e.currentTarget.value);\n  }\n\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5\">\n      <h1>Claim your EBWA portal account</h1>\n      <p className=\"fs-4\">\n        Please enter the email id you used to send documents to the association.\n        Make sure you have access to it as you will be emailed a password to\n        login to this portal\n      </p>\n      <form className=\"p-2 d-flex flex-column align-items-center\">\n        <input className=\"form-control\" type=\"email\" placeholder=\"email\" value={email} onChange={handleInput}/>\n        <button onClick={handleClaimAccount} className=\"btn btn-info mt-4\">\n          Claim Account\n        </button>\n      </form>\n      <hr className=\"my-3\" />\n      <h1 className=\"mt-4\">Already Have an account?</h1>\n      <Link to=\"/f/auth/login/\" className=\"btn btn-info mt-2 align-self-center\">\n        Login\n      </Link>\n    </div>\n  );\n}\n\nexport default CreateAccount;\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nfunction AccountCreated() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">We have mailed you a password.</h1>\n      <p className=\"fs-4 px-4\">\n        Congratulation, your documents have been verified and now you may use\n        the portal.\n      </p>\n      <p className=\"fs-4 px-4\">\n        We have emailed you a password that you may use to login to the portal.\n      </p>\n      <Link to=\"/f/auth/login\" className=\"btn btn-info mt-2 align-self-center\">\n          LogIn\n     </Link>\n    </div>\n  );\n}\n\nexport default AccountCreated;\n","import React from \"react\";\n\nfunction NoInvite() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">Your Email Isn't Valid</h1>\n      <p className=\"fs-4 px-4\">\n        If you haven't submitted your documents, you will need to do so, so that\n        we may verify your identity.\n      </p>\n      <p className=\"fs-4 px-4\">\n        However if you have submitted them, please check back in a few days as\n        we may still be processing them.\n      </p>\n    </div>\n  );\n}\n\nexport default NoInvite;\n","import React, { useState, useEffect } from \"react\";\nimport  {Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport {logInUser} from '../../redux/actions';\nimport {getUserFromState} from '../../redux/selectors';\n\n\nfunction LoginModule() {\n\n  let history = useHistory();\n  let dispatch = useDispatch();\n  let user = useSelector(getUserFromState);\n  let [loginDisabled, setLoginDisabled] = useState(true);\n  let [credentials, setCredentials] = useState({\n    email: \"saurabsalhotra@gmail.com\",\n    password: \"BSZTD\",\n  });\n\n  function handleLogin(e: React.SyntheticEvent): void {\n    e.preventDefault();\n    dispatch(logInUser(credentials));\n    \n  }\n\n  function handleInput(e: React.SyntheticEvent):void {\n    const target = e.currentTarget as HTMLInputElement;\n    setCredentials({\n      ...credentials,\n      [target.name]: target.value,\n    });\n  }\n\n  useEffect(() => {\n    setLoginDisabled(!validateCredentials());\n    if(user){\n      history.push('/f/noticeboard');\n    }\n  });\n\n  function validateCredentials(): boolean {\n    let e = credentials.email;\n    let p = credentials.password;\n    if (e && p) {\n      return e.includes(\"@\") && e.includes(\".\") && p.length >= 5;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <form className=\"p-2 d-flex flex-column align-items-stretch\">\n      <input\n        className=\"form-control my-2\"\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"email\"\n        value={credentials.email}\n        required\n        onChange={handleInput}\n      />\n      <input\n        className=\"form-control my-2\"\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"password\"\n        value={credentials.password}\n        required\n        onChange={handleInput}\n      />\n      <button\n        className=\"btn btn-info mt-4\"\n        disabled={loginDisabled}\n        onClick={handleLogin}\n      >\n        Login\n      </button>\n      <Link to=\"/auth/forgotpassword\" className=\"btn btn-info mt-4\">\n        Forgot Password\n      </Link>\n    </form>\n  );\n}\n\nexport default LoginModule;\n","import React from \"react\";\nimport LoginModule from \"./LoginModule\";\n\nfunction InvalidPassword() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">Account Already Exists</h1>\n      <p className=\"fs-4 px-4\">\n        It seems this account already exists, please just login into it using your credentials.\n      </p>\n      <LoginModule/>\n    </div>\n  );\n}\n\nexport default InvalidPassword;\n","import React from \"react\";\nimport LoginModule from \"./LoginModule\";\n\nfunction Login() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">Log In to EBWA portal</h1>\n      <p className=\"fs-4 px-4\">\n        If this is you first login, please check your email, you will find a\n        username and password, that is specific to you. Please do not share that\n        with anyone.\n      </p>\n      <LoginModule/>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport LoginModule from \"./LoginModule\";\n\nfunction InvalidPassword() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">Invalid Password</h1>\n      <p className=\"fs-4 px-4\">\n        Sorry, we couldn't validate your password, please check if you have\n        typed it correctly. If you have forgotten it please request a new\n        password.\n      </p>\n     <LoginModule/> \n    </div>\n  );\n}\n\nexport default InvalidPassword;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ForgotPassword() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-2\">Forgot Password</h1>\n      <p className=\"fs-4 px-4\">\n        If you have forgotten your password, please provide us with the email,\n        you used to register with the Associaition.{\" \"}\n      </p>\n      <form className=\"p-2 d-flex flex-column align-items-center\">\n        <input\n          className=\"form-control my-2\"\n          type=\"password\"\n          placeholder=\"new password\"\n          required\n        />\n\n        <Link to=\"/f/auth/resetforgotpassword\" className=\"btn btn-info mt-4\">Request Password Change Link</Link>\n      </form>\n    </div>\n  );\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ResetForgotPassword() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-2\">Enter new password</h1>\n      <p className=\"fs-4 px-4\">You have initiated a password change. A secret token has been mailed to your email account registered with us. Please open that mail and provide us with the secret access token.</p>\n      <form className=\"p-2 mt-4 d-flex flex-column align-items-center\">\n        <div className=\"d-flex flex-column align-items-stretch w-75 mb-3\">\n          <input\n            className=\"form-control w-100 my-2\"\n            type=\"text\"\n            placeholder=\"secret token\"\n            required\n          />\n          <input\n            className=\"form-control w-100 my-2\"\n            type=\"password\"\n            placeholder=\"new password\"\n            required\n          />\n          <input\n            className=\"form-control w-100 my-2\"\n            type=\"password\"\n            placeholder=\"confirm new password\"\n            required\n          />\n        </div>\n        <Link to=\"/auth/passwordchanged\" className=\"btn btn-info \">Change Passsword</Link>\n      </form>\n    </div>\n  );\n}\n\nexport default ResetForgotPassword;\n","import React from \"react\";\n\nfunction ChangePassword() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">Change Password</h1>\n      <form className=\"p-2 d-flex flex-column align-items-center\">\n        <div className=\"d-flex flex-column align-items-stretch w-75 mb-5\">\n          <label htmlFor=\"\">Please Enter old password</label>\n          <input\n            className=\"form-control w-100 my-2\"\n            type=\"password\"\n            placeholder=\"old password\"\n            required\n          />\n        </div>\n        <div className=\"d-flex flex-column align-items-stretch w-75 mb-5\">\n          <label htmlFor=\"\">Please Enter new password</label>\n          <input\n            className=\"form-control w-100 my-2\"\n            type=\"password\"\n            placeholder=\"new password\"\n            required\n          />\n          <input\n            className=\"form-control w-100 my-2\"\n            type=\"password\"\n            placeholder=\"confirm new password\"\n            required\n          />\n        </div>\n        <button className=\"btn btn-info mt-4\">Change Passsword</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChangePassword;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction PasswordChanged() {\n  return (\n    <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5 \">\n      <h1 className=\"mb-5\">Your Password has been changed</h1>\n      <p className=\"fs-4 px-4\">\n        You requested a password change and the same has been processed. An email regarding the same was also sent to you.\n        You may now proceed by loggin in with your new credentials.\n      </p>\n      <Link to=\"/auth/login\" className=\"btn btn-info \">Login</Link>\n    </div>\n  );\n}\n\nexport default PasswordChanged;\n","import {\n    Switch,\n    Route\n  } from \"react-router-dom\"\n\nimport CreateAccount from \"./CreateAccount\"\nimport AccountCreated from \"./AccountCreated\"\nimport NoInvite from \"./NoInvite\";\nimport AccountAlreadyExists from \"./AccountAlreadyExists\";\nimport Login from \"./Login\";\nimport InvalidPassword from \"./InvalidPassword\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport ResetForgotPassword from \"./ResetForgotPassword\";\nimport ChangePassword from \"./ChangePassword\";\nimport PasswordChanged from \"./PasswordChanged\";\n\n export default function Authentication() {\n      return (\n          <Switch>\n\n              <Route path=\"/f/auth/accountcreated\">\n                  <AccountCreated/>\n              </Route>\n\n              <Route path=\"/f/auth/createaccount\">\n                <CreateAccount/>\n              </Route>\n\n              <Route path=\"/f/auth/noinvite\">\n                <NoInvite/>\n              </Route>\n\n              <Route path=\"/f/auth/accountalreadyexists\">\n                <AccountAlreadyExists/>\n              </Route>\n\n              <Route path=\"/f/auth/login\">\n                <Login/>\n              </Route>\n\n              <Route path=\"/f/auth/invalidpassword\">\n                <InvalidPassword/>\n              </Route>\n\n              <Route path=\"/f/auth/forgotpassword\">\n                <ForgotPassword/>\n              </Route>\n\n              <Route path=\"/f/auth/resetforgotpassword\">\n                <ResetForgotPassword/>\n              </Route>\n\n              <Route path=\"/f/auth/changepassword\">\n                <ChangePassword/>\n              </Route>\n\n              <Route path=\"/f/auth/passwordChanged\">\n                <PasswordChanged/>\n              </Route>\n              \n          </Switch>\n      )\n  }\n\n","import {useEffect, useState} from 'react';\nimport {useHistory} from 'react-router';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getUserFromState} from '../redux/selectors';\nimport { Link } from \"react-router-dom\";\nimport { resumeSession } from '../redux/actions';\n\n\n\nfunction Welcome() {\n  let history = useHistory();\n  let user = useSelector(getUserFromState);\n  let dispatch = useDispatch();\n\n  let [checkedSession, setSessionCheck] = useState(false);\n\n  useEffect(()=>{\n    if(user){\n      console.log('Pre-existing session detected, rerouting. User:'+ user.email)\n      history.push('/f/noticeboard');\n    }\n\n    if(!user && !checkedSession){\n      console.log('Found no user, dispatching a resumeSession');\n      dispatch(resumeSession());\n      setSessionCheck(true);\n    }\n  })\n  \n  let chartStyle = { \n    backgroundColor: \"#FFFFFF\", \n    border: \"none\",\n    borderRadius: \"2px\",\n    boxShadow: \"0 2px 10px 0 rgba(70, 76, 79, .2)\",\n    margin:\"20px auto 20px auto\"\n  };\n\n  return (\n      <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5\">\n        <h1 className=\"mb-5\">Welcome to Expat Buyer's Welfare Associaiton</h1>\n        <p className=\"fs-4\">\n          If this is your first time here, please claim your account.\n        </p>\n        <Link to=\"/f/auth/createaccount\" className=\"btn btn-info mt-2 align-self-center\">\n          Claim Account\n        </Link>\n        <hr className=\"my-3\" />\n        <h1 className=\"mt-4\">Already Have an account?</h1>\n        <Link to=\"/f/auth/login\" className=\"btn btn-info mt-2 align-self-center\">\n          LogIn\n        </Link>\n        <h3 className=\"mt-5\">Users who have actived their accounts</h3>\n        <iframe style={chartStyle} width=\"320\" height=\"240\" src=\"https://charts.mongodb.com/charts-project-0-xksgk/embed/charts?id=25ea2996-39b1-401c-8782-12ffc2adf43b&theme=light\"/>\n      </div>\n  );\n}\n\nexport default Welcome;\n","import qs from 'qs';\nimport { Link, useLocation} from \"react-router-dom\";\n\n\nfunction ErrorScreen() {\n  let location = useLocation();\n  let {error} = qs.parse(location.search, {ignoreQueryPrefix:true});\n  console.log(location);\n  return (\n      <div className=\"container-fluid d-flex flex-column align-items-stretch justify-content-center text-center vh-100 p-5\">\n        <h3 className=\"text-danger\"> {error} </h3>\n        <hr/>\n        <h1 className=\"mb-1\">We Faced an error.</h1>\n        <p className=\"fs-4\">\n          We are sorry something went wrong please use the back button to go where you were.\n        </p>\n        \n        <Link to=\"/f/auth/welcome\">Back to Welcome Screen</Link>\n      </div>\n\n  );\n}\n\nexport default ErrorScreen;\n","import {useSelector} from 'react-redux';\nimport { IUserF } from '../../../../types/authTypes';\nimport {getUserFromState} from '../../../redux/selectors';\n\nfunction CurrentUser(props:{user:IUserF}) {\n  let user = props.user;\n\n    return (\n        <div className=\"container mt-3 mb-0\">\n              <div className=\"row\">\n                <h2 className=\"text-center mb-0\">Hello, {user.name!}</h2>\n              </div>\n              <div className=\"row justify-content-center gx-0 pt-0\">\n                <div className=\"col-4 text-end text-muted\">CID {user.cid}</div>\n                <div className=\"col-1 text-center\"><b>|</b></div>\n                <div className=\"col-4 text-start text-muted\">{user.designation}</div>\n              </div>\n       </div>\n      )\n}\n\nexport default CurrentUser","import {IPost} from '../../../../types/postTypes';\n\nfunction Post(props:{post:IPost}){\n    let post = props.post;\n    let dateObj = new Date(post.date);\n    return (\n        <>\n            <div className=\"container-fluid bg-light my-4 p-4\">\n\n                <div className=\"row align-items-center\">\n\n                    <div className=\"col-10\"> \n                        <p className = \"fs-5 my-0\"> <b>{post.author.name}</b> | <span className = \"fs-6 text-muted\"> {post.author.designation} </span> </p>\n                        <p className = \"fs-6 my-0 text-muted\"> {dateObj.toLocaleDateString()}</p> \n                    </div>\n\n                    <div className=\"col-2 d-flex justify-content-end\">\n                        <button className=\"btn btn-info\"> Edit </button>\n                    </div>\n\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <p className=\"fs-4 mt-3 text-center\"><b>{post.title}</b></p>\n                        <p className=\"fs-5 mt-3 text-center\">{post.subject}</p>\n\n                    </div>\n\n                    <div className=\"col-12\">\n                        <p className=\"fs-6 mt-3 text-left\">{post.message}</p>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Post;","import { IPost } from \"../../../../types/postTypes\";\nimport Post from \"./Post\";\n\nfunction MainFeed({posts}:{posts:IPost[]}) {\n\n    let postsToRender = [];\n\n    for(let post of posts){\n        postsToRender.push(<Post post={post}/>)\n    }\n\n    return (\n        <>\n            <div className=\"conatiner mt-3 px-3\">\n                <h5>Notice Board</h5>\n                <hr className=\"my-0\"></hr>\n                {postsToRender}\n            </div>\n        </>\n    )\n}\n\nexport default MainFeed;","import CurrentUser from \"./CurrentUser/CurrentUser\";\nimport MainFeed from \"./MainFeed/MainFeed\";\nimport {useEffect} from 'react';\nimport {useHistory} from 'react-router';\nimport {useSelector} from 'react-redux';\nimport {getUserFromState, getPostsFromState} from '../../redux/selectors';\n\nexport default function NoticeBoard() {\n\n  let history = useHistory();\n  let user = useSelector(getUserFromState);\n  let posts = useSelector(getPostsFromState);\n\n  useEffect(()=>{\n    console.log(posts);\n    if(!user){\n      console.log('Redirecting to Login');\n      history.push('/f/auth/login');\n    } else {\n      console.log('Notice board found user : '+ user.email);\n    }\n    \n  \n  })\n\n  return (\n    <>\n      <CurrentUser user={user}/>\n      <MainFeed posts={posts}/>\n    </>\n  );\n}\n","import { Reducer } from \"redux\";\nimport { AppState } from \"../../../types/stateTypes\";\nimport {REMOVE_USER, SET_USER, SET_USER_ERR} from '../actionTypes'\n\nlet initialState = false;\n\nconst authReducer: Reducer<AppState['user'] | undefined> = function (state = initialState, action) {\n    switch (action.type) {\n\n        case SET_USER: {\n            return action.payload\n        }\n        case REMOVE_USER: {\n            return false\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default authReducer;","import { Reducer } from \"redux\";\nimport { AppState } from \"../../../types/stateTypes\";\nimport {REMOVE_USER, SET_NOTICEBOARD_ERR, SET_USER, SET_USER_ERR} from '../actionTypes'\n\nlet initialState = {\n    user:false,\n    noticeBoard:false\n};\n\nconst errorReducer: Reducer<AppState[\"error\"] | undefined> = function (state = initialState, action) {\n    switch (action.type) {\n        case SET_USER_ERR: {\n            return {\n                ...state,\n                user: action.payload\n            }\n        }\n        case SET_NOTICEBOARD_ERR: {\n            return {\n                ...state,\n                noticeBoard: action.payload\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default errorReducer;","import { Reducer } from \"redux\";\nimport { AppState } from \"../../../types/stateTypes\";\nimport {SET_NOTICEBOARD, REMOVE_NOTICEBOARD} from '../actionTypes'\n\nlet initialState = false;\n\nconst noticeBoardReducer: Reducer<AppState[\"noticeBoard\"] | undefined> = function (state = initialState, action) {\n    switch (action.type) {\n        case SET_NOTICEBOARD: {\n            return action.payload\n        }\n        case REMOVE_NOTICEBOARD: {\n            return false\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default noticeBoardReducer;","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from \"redux-thunk\";\nimport {AppState} from '../../types/stateTypes'\nimport authReducer from \"./reducers/authReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\nimport noticeBoardReducer from \"./reducers/noticeBoardReducer\";\n\nconst composedEnhancer = composeWithDevTools(\n    applyMiddleware(thunk)\n);\n\nlet rootReducer = combineReducers({\n    user:authReducer,\n    error:errorReducer,\n    noticeBoard:noticeBoardReducer\n})\n\nexport default createStore(rootReducer, composedEnhancer);","import AppWrapper from \"./components/AppWrapper\"\nimport AppBar from \"./components/AppBar/AppBar\";\nimport Authentication from './components/Authentication/Authentication';\nimport Welcome from './components/Welcome';\nimport ErrorScreen from './components/ErrorScreen';\nimport NoticeBoard from \"./components/NoticeBoard/NoticeBoard\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { config } from \"./config\";\n\n\n\n\nfunction App() {\n  console.log(config.host);\n  return (\n    <Provider store={store}>\n       <Router>\n      <AppWrapper>\n        <AppBar />\n        <Switch>\n          <Route path=\"/f/auth/*\">\n            <Authentication />\n          </Route>\n\n          <Route path=\"/f/noticeboard\">\n            <NoticeBoard/>\n          </Route>\n\n          <Route path=\"/f/error\">\n            <ErrorScreen/>\n          </Route>\n\n          <Route path=\"/\">\n            <Welcome/>\n          </Route>\n\n        </Switch>\n      </AppWrapper>\n    </Router>\n    </Provider>\n   \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}